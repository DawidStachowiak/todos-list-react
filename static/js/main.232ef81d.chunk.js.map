{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","index.js"],"names":["FormElement","styled","form","Button","button","FormInput","input","Form","addNewTask","useState","newtaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trim","current","focus","value","className","placeholder","onChange","target","required","List","ul","Item","li","hidden","css","Content","span","done","Buttons","toggleDone","remove","Tasks","tasks","hideTasksDone","removeTask","toglleTaskDone","map","task","onClick","id","content","ListButtonWrap","div","toggleHideDone","setAllDone","length","disabled","every","Wrapper","WrapperHeader","h2","Section","title","body","extraHeaderContent","Header","ContainerElement","main","Container","children","App","setHidetasksDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.232ef81d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const FormElement = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n\n  @media (max-width: 768px) {\n    margin-top: 10px;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 11px;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n  text-align: center;\n  transition: 0.3s;\n  background-color: #2e747c;\n  color: white;\n  flex-grow: 0;\n  margin-left: 20px;\n  transition: 1s;\n\n  @media (max-width: 768px) {\n    flex-basis: 100%;\n    margin: 10px 0;\n  }\n  &:hover {\n    background-color: #3d858dc9;\n    transform: scale(1.1);\n  }\n`;\n\nexport const FormInput = styled.input`\n  border-radius: 3px;\n  flex-grow: 1;\n  padding: 10px;\n  border: 1px solid #dfdedf;\n  border-radius: 2px;\n  margin-left: 15px;\n\n  @media (max-width: 768px) {\n    flex-basis: 100%;\n    margin: 0px;\n  }\n`;\n","import React, { useState, useRef } from \"react\";\r\n\r\nimport { FormElement, Button, FormInput } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newtaskContent, setNewTaskContent] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (newtaskContent.trim() === \"\") {\r\n      return;\r\n    }\r\n    addNewTask(newtaskContent.trim());\r\n    setNewTaskContent(\"\");\r\n    inputRef.current.focus();\r\n  };\r\n  return (\r\n    <FormElement onSubmit={onFormSubmit}>\r\n      <FormInput\r\n        value={newtaskContent}\r\n        className=\"form__input js-new__task\"\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={(event) => setNewTaskContent(event.target.value)}\r\n        required\r\n      />\r\n      <Button>Dodaj zadanie</Button>\r\n    </FormElement>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled, { css } from \"styled-components\";\n\nexport const List = styled.ul`\n  padding: 0px;\n`;\n\nexport const Item = styled.li`\n  list-style: none;\n  padding: 20px;\n  border-bottom: 1px solid #838586;\n  display: grid;\n  align-items: center;\n  word-break: break-all;\n  grid-template-columns: 35px auto 40px;\n\n  ${({ hidden }) =>\n    hidden &&\n    css`\n      display: none;\n    `}\n`;\n\nexport const Content = styled.span`\n  margin-left: 10px;\n  margin-right: 10px;\n\n  ${({ done }) =>\n    done &&\n    css`\n      text-decoration: line-through;\n    `}\n`;\n\nexport const Buttons = styled.button`\n  width: 35px;\n  height: 35px;\n  border: none;\n  color: #fff;\n  transition: 0.5s;\n  cursor: pointer;\n\n  ${({ toggleDone }) =>\n    toggleDone &&\n    css`\n      background-color: #008000;\n      &:hover background-color: #008000b7;\n    `}\n\n  ${({ remove }) =>\n    remove &&\n    css`\n      background-color: #eb293c;\n      &:hover background-color: #eb293cb4;\n    `}\n`;\n","import { List, Item, Content, Buttons } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideTasksDone, removeTask, toglleTaskDone }) => (\r\n  <List>\r\n    {tasks.map((task) => (\r\n      <Item key={task.id} hidden={task.done && hideTasksDone}>\r\n        <Buttons onClick={() => toglleTaskDone(task.id)} toggleDone>\r\n          {task.done ? \"✔\" : \"\"}\r\n        </Buttons>\r\n        <Content done={task.done}>{task.content}</Content>\r\n\r\n        <Buttons remove onClick={() => removeTask(task.id)}>\r\n          &#128465;\r\n        </Buttons>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nexport default Tasks;\r\n","import styled from \"styled-components\";\n\nexport const ListButtonWrap = styled.div`\n  display: flex;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  border: none;\n  color: teal;\n  background: white;\n  transition: 1s;\n  cursor: pointer;\n  margin-right: 20px;\n\n  &:hover {\n    color: rgb(2, 175, 175);\n  }\n\n  &:disabled {\n    color: rgba(204, 204, 204, 0.953);\n    cursor: not-allowed;\n  }\n`;\n","import { ListButtonWrap, Button } from \"./styled\";\r\nconst Buttons = ({ tasks, hideTasksDone, toggleHideDone, setAllDone }) => {\r\n  if (!tasks.length) {\r\n    return null;\r\n  }\r\n  return (\r\n    <ListButtonWrap>\r\n      <Button onClick={toggleHideDone} className=\"buttons__button\">\r\n        {hideTasksDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n      </Button>\r\n      <Button\r\n        onClick={setAllDone}\r\n        className=\"buttons__button \"\r\n        disabled={tasks.every(({ done }) => done)}\r\n      >\r\n        Ukończ wszystkie\r\n      </Button>\r\n    </ListButtonWrap>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  margin: 10px 10px;\n  display: grid;\n  background: white;\n  grid-row-gap: 2px;\n  grid-auto-rows: minmax(65px, auto);\n\n  @media (max-width: 768px) {\n    margin: 10px 15px;\n  }\n`;\n\nexport const Item = styled.div`\n  border-bottom: 3px solid #efefef;\n  display: grid;\n  grid-template-columns: auto auto;\n  align-items: center;\n  grid-gap: 10px;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\nexport const WrapperHeader = styled.h2`\n  margin-left: 20px;\n  font-size: 19px;\n  padding: 5px;\n`;\n","import { Wrapper, Item, WrapperHeader } from \"./styled\";\nconst Section = ({ title, body, extraHeaderContent }) => (\n  <Wrapper>\n    <Item>\n      <WrapperHeader>{title}</WrapperHeader>\n      {extraHeaderContent}\n    </Item>\n    {body}\n  </Wrapper>\n);\n\nexport default Section;\n","const Header = ({ title }) => (\n  <header>\n    <h1>{title}</h1>\n  </header>\n);\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const ContainerElement = styled.main`\n  max-width: 900px;\n  padding: 20px;\n  margin: 0 auto;\n`;\n","import { ContainerElement } from \"./styled\";\nconst Container = ({ children }) => (\n  <ContainerElement>{children}</ContainerElement>\n);\n\nexport default Container;\n","import Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useState } from \"react\";\nimport { useTasks } from \"./useTasks\";\n\nfunction App() {\n  const [hideTasksDone, setHidetasksDone] = useState(false);\n\n  const toggleHideDone = () => {\n    setHidetasksDone((hideTasksDone) => !hideTasksDone);\n  };\n\n  const { tasks, removeTask, toglleTaskDone, setAllDone, addNewTask } =\n    useTasks();\n\n  return (\n    <Container>\n      <Header title=\"Lista zadań\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n      <Section\n        title=\"Lista zadań\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideTasksDone={hideTasksDone}\n            removeTask={removeTask}\n            toglleTaskDone={toglleTaskDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideTasksDone={hideTasksDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\n\nexport const useTasks = () => {\n  const [tasks, setTasks] = useState(\n    JSON.parse(localStorage.getItem(\"tasks\")) || []\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const removeTask = (id) => {\n    setTasks((tasks) => tasks.filter((task) => task.id !== id));\n  };\n\n  const toglleTaskDone = (id) => {\n    setTasks((tasks) =>\n      tasks.map((task) => {\n        if (task.id === id) {\n          return { ...task, done: !task.done };\n        }\n        return task;\n      })\n    );\n  };\n\n  const setAllDone = () => {\n    setTasks((tasks) => tasks.map((task) => ({ ...task, done: true })));\n  };\n\n  const addNewTask = (content) => {\n    setTasks((tasks) => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\n      },\n    ]);\n  };\n\n  return {\n    tasks,\n    removeTask,\n    toglleTaskDone,\n    setAllDone,\n    addNewTask,\n  };\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}